<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>林鸟狂言</title>
    <link>https://zpcjl.github.io/</link>
    <description>Recent content on 林鸟狂言</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 26 Mar 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://zpcjl.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Ubuntu22.04中KVM安装Openwrt虚拟机及管理</title>
      <link>https://zpcjl.github.io/posts/ubuntu22.04%E4%B8%ADkvm%E5%AE%89%E8%A3%85openwrt%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%8F%8A%E7%AE%A1%E7%90%86/</link>
      <pubDate>Wed, 26 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://zpcjl.github.io/posts/ubuntu22.04%E4%B8%ADkvm%E5%AE%89%E8%A3%85openwrt%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%8F%8A%E7%AE%A1%E7%90%86/</guid>
      <description>&lt;p&gt;kvm(kernel-based virtual machines)是一个基于linux内核的虚拟化技术, 可以直接将linux内核转换为hypervisor（系统管理程序）从而使得linux内核能够直接管理虚拟机, 直接调用linux内核中的内存管理、进程管理子系统来管理虚拟机。在ubuntu中安装openwrt可以作为旁路由方便管理。&lt;/p&gt;&#xA;&lt;h3 id=&#34;一安装kvm和openwrt虚拟机&#34;&gt;一、安装KVM和Openwrt虚拟机 &lt;/h3&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;本文操作都是在root账户下进行。&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;1.验证支持KVM&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;(1)验证CPU是否支持硬件虚拟化&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;grep -Eoc &#39;(vmx|svm)&#39; /proc/cpuinfo //数字大于0，则代表CPU支持硬件虚拟化，反之则不支持&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;(2)检查 VT 是否在 BIOS 中启用&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;apt install cpu-checker //检查 VT 是否在 BIOS 中启用&#xA;&#xA;kvm-ok //如果处理器虚拟化能力没有在 BIOS 中被禁用，命令将会打印出,否则，这个命令将会打印一个失败信息，和打印的消息&#xA;INFO: /dev/kvm exists&#xA;KVM acceleration can be used&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;&lt;strong&gt;2.安装KVM&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;apt install -y qemu-kvm libvirt-daemon-system libvirt-clients bridge-utils virtinst virt-manager&#xA;systemctl is-active libvirtd&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;(1)检查是否安装成功&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; lsmod | grep kvm&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;(2)启动虚拟化和设置开机自启&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;systemctl start libvirtd &#xA;systemctl enable libvirtd&#xA;systemctl list-unit-files |grep libvirtd.service //打印启动虚拟化和设置开机自启情况&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;&lt;strong&gt;3．网络环境配置&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ubuntu22.04安装Plex,并开启硬件解码</title>
      <link>https://zpcjl.github.io/posts/ubuntu22.04%E5%AE%89%E8%A3%85plex%E5%B9%B6%E5%BC%80%E5%90%AF%E7%A1%AC%E4%BB%B6%E8%A7%A3%E7%A0%81/</link>
      <pubDate>Wed, 26 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://zpcjl.github.io/posts/ubuntu22.04%E5%AE%89%E8%A3%85plex%E5%B9%B6%E5%BC%80%E5%90%AF%E7%A1%AC%E4%BB%B6%E8%A7%A3%E7%A0%81/</guid>
      <description>&lt;p&gt;    Plex是一个媒体播放器和媒体服务器的组合，它可以让你把所有的媒体文件都放在一个地方，然后在任何设备上都可以轻松地访问和播放。你只需要在一台电脑或NAS上安装Plex Media Server，然后把你的媒体文件添加到它的数据库中，就可以通过网络把它们提供给其他设备。&lt;/p&gt;&#xA;&lt;p&gt;   本文是在N5095小主机中的Ubuntu22.04安装Plex，Ubuntu22.04默认的内核版本为5.15，而这个版本内含一个bug，导致11代IntelCPU无法正常开启硬件解码。&lt;/p&gt;&#xA;&lt;h3 id=&#34;一下载安装plex-media-server&#34;&gt;一、下载安装Plex Media Server&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;1.进入Plex网站下载：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.plex.tv/zh/&#34;&gt;https://www.plex.tv/zh/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;鼠标移动到下载，点击&lt;em&gt;&lt;strong&gt;Plex Media Server&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdnjson.com/images/2024/01/31/1b2be73b8b0487867.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;依次选择Linux-选择分布Ubuntu(16.04+)/Debian(8+)64-bit&#xA;&lt;img src=&#34;https://cdnjson.com/images/2024/01/31/208beaddd60d221a5.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;2.用Winscp将下载的plexmediaserver_xxx.deb文件上传到Ubuntu /opt/目录下&lt;/strong&gt;&#xA;进入目录安装：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;cd /opt&#xA;dpkg -i plexmediaserver_xxx.deb&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;启动、停止、开机启动命令：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;systemctl start plexmediaserver&#xA;systemctl stop plexmediaserver&#xA;systemctl enable plexmediaserver&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;**3.浏览器输入http://ip:32400即可进入服务器配置&#xA;**&lt;/p&gt;&#xA;&lt;h3 id=&#34;二ubuntu开启硬解&#34;&gt;二、Ubuntu开启硬解&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;1.升级内核版本&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;使用 dpkg 手动方式升级 Linux 内核&lt;/p&gt;&#xA;&lt;p&gt;从 &lt;a href=&#34;https://kernel.ubuntu.com/mainline/&#34;&gt;kernel.ubuntu.com&lt;/a&gt; 网站手动下载5.18以上 Linux 内核&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdnjson.com/images/2024/01/31/18bbcbc35949db7ac.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;点击你所选择的 Linux 内核版本链接，找到你对应的架构（“Build for XXX”）的那部分。然后下载符合以下格式的两个文件（其中 X.Y.Z 是最高版本号）：&lt;/p&gt;&#xA;&lt;p&gt;1.linux-image-X.Y.Z-generic-*.deb&lt;/p&gt;&#xA;&lt;p&gt;2.linux-modules-X.Y.Z-generic-.deb&lt;/p&gt;&#xA;&lt;p&gt;在终端中改变到文件所在的目录，然后root用户执行命令手动安装内核：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;dpkg --install *.deb&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;重启系统，使用新内核：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;reboot&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;检查是否如你所愿：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;uname -r&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;&lt;strong&gt;2.Intel显卡驱动配置&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>newnwe</title>
      <link>https://zpcjl.github.io/posts/newnewnew/</link>
      <pubDate>Wed, 27 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://zpcjl.github.io/posts/newnewnew/</guid>
      <description>&lt;p&gt;新文章&lt;/p&gt;&#xA;&lt;p&gt;新文章&lt;/p&gt;</description>
    </item>
    <item>
      <title>ubuntu22.04中typecho安装和配置</title>
      <link>https://zpcjl.github.io/posts/ubuntu22.04%E4%B8%ADtypecho%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Tue, 26 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://zpcjl.github.io/posts/ubuntu22.04%E4%B8%ADtypecho%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://typecho.org/&#34;&gt;Typecho&lt;/a&gt;是一个轻量级的开源博客系统，具有简单、易用的特点。本文是在&lt;a href=&#34;https://www.oracle.com/&#34;&gt;Oracle&lt;/a&gt;实例 Ubuntu-22.04-Minimal 系统上安装 Typecho 博客系统的基本步骤。包括Nginx、PHP、Mysql、Typecho的安装和配置。此方法按照实际情况请参考使用！&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;一开放实例防火墙&#34;&gt;一、开放实例防火墙&lt;/h3&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;&lt;strong&gt;root下（下同）输入命令：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;iptables -P INPUT ACCEPT&#xA;iptables -P FORWARD ACCEPT&#xA;iptables -P OUTPUT ACCEPT&#xA;iptables -F&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;&lt;em&gt;80,443端口自行在安全列表中开放。&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;二安装nginxvimunzip&#34;&gt;二、安装nginx、vim、unzip&lt;/h3&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;&lt;strong&gt;输入命令：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;apt install nginx vim unzip -y&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;在浏览器http://IP 可以出现Welcome to nginx!&lt;/p&gt;&#xA;&lt;h3 id=&#34;三安装php及相关扩展&#34;&gt;三、安装PHP及相关扩展&lt;/h3&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;输入命令：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;apt install php-fpm php-mysql php-curl php-gd php-mbstring php-xml -y&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h3 id=&#34;四修改nginx配置文件测试php&#34;&gt;四、修改Nginx配置文件，测试PHP&lt;/h3&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;1.修改配置&lt;/p&gt;&#xA;&lt;p&gt;进入nginx的配置文件夹：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;cd /etc/nginx/sites-available/&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;先备份然后再修改：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;cp default default.back&#xA;vim default&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;修改Nginx配置文件为（删掉原来的文件复制粘贴即可）：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;server {&#xA;    listen 80;&#xA;    listen 443 ssl http2;&#xA;    listen [::]:443 ssl http2;&#xA;    server_name iblogs.me; # 填入域名&#xA;    &#xA;    ssl_certificate /etc/ssl/cert.pem;# 填入SSL证书路径&#xA;    ssl_certificate_key /etc/ssl/key.pem;# 填入SSL证书路径&#xA;    &#xA;    root /var/www/html; &#xA;&#xA;    index index.php index.html index.htm;&#xA;&#xA;    location / {&#xA;        try_files $uri $uri/ /index.php?$args;&#xA;    }&#xA;&#xA;    location ~ \.php$ {&#xA;        include snippets/fastcgi-php.conf;&#xA;        fastcgi_pass unix:/run/php/php8.1-fpm.sock; # 注意版本号8.1，与安装的php版本号对应&#xA;        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;&#xA;        include fastcgi_params;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;验证文件的正确性：&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://zpcjl.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://zpcjl.github.io/about/</guid>
      <description>&lt;h3 id=&#34;很懒还没想好怎么介绍有空再来&#34;&gt;很懒，还没想好怎么介绍，有空再来&amp;hellip;&amp;hellip; &lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;github:&lt;/strong&gt; &lt;a href=&#34;https://github.com/zpcjl&#34; title=&#34;github&#34;&gt;https://github.com/zpcjl&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;哔哩哔哩：&lt;/strong&gt;&lt;a href=&#34;https://space.bilibili.com/67350431&#34; title=&#34;bilibili&#34;&gt;https://space.bilibili.com/67350431&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p&gt; &#xA; &lt;/p&gt;</description>
    </item>
  </channel>
</rss>
