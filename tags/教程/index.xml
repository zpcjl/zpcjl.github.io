<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>教程 on 林鸟狂言</title>
    <link>https://zpcjl.github.io/tags/%E6%95%99%E7%A8%8B/</link>
    <description>Recent content in 教程 on 林鸟狂言</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 27 Mar 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://zpcjl.github.io/tags/%E6%95%99%E7%A8%8B/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>hugo&#43;github pages免费搭建自己的博客</title>
      <link>https://zpcjl.github.io/posts/hugo&#43;github-pages%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Thu, 27 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://zpcjl.github.io/posts/hugo&#43;github-pages%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/</guid>
      <description>&lt;p&gt;GitHub Pages 可以用来展示一些开源项目、主持博客甚或分享您的简历。Hugo 是 Go 编写的静态网站生成器，速度快，易用，可配置。通过hugo生成静态网站部署到github pages就可以得到我们的私人博客。&lt;/p&gt;&#xA;&lt;h3 id=&#34;一环境准备&#34;&gt;一、环境准备&lt;/h3&gt;&#xA;&lt;p&gt;本文使用的是windows 10,linux和macos操作类似，可查看&lt;a href=&#34;https://gohugo.io/getting-started/quick-start/&#34; title=&#34;hugo docs&#34;&gt;hugo官方文档&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;h4 id=&#34;1git下载&#34;&gt;1.Git下载&lt;/h4&gt;&#xA;&lt;p&gt;（1）前往【Git官网】，下载安装程序&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://letere-gzj.github.io/hugo-stack/p/hugo/custom-blog/git%E4%B8%8B%E8%BD%BD.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;（2）一直点下一步，默认安装即可&lt;/p&gt;&#xA;&lt;p&gt;####2.Hugo下载&lt;/p&gt;&#xA;&lt;p&gt;前往【&lt;a href=&#34;https://github.com/gohugoio/hugo/tags&#34; title=&#34;hugo&#34;&gt;Hugo Github Tags&lt;/a&gt;】，选择对应版本下载，下载后解压即可&lt;/p&gt;&#xA;&lt;p&gt;Windows下载版本：hugo_extended_xxxxx_windows_amd64.zip&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://letere-gzj.github.io/hugo-stack/p/hugo/custom-blog/hugo%E4%B8%8B%E8%BD%BD.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;二本地搭建博客&#34;&gt;二、本地搭建博客&lt;/h3&gt;&#xA;&lt;h4 id=&#34;1创建博客&#34;&gt;1.创建博客&lt;/h4&gt;&#xA;&lt;p&gt;（1）在hugo.exe所在文件夹的地址栏敲打cmd，然后Enter唤起命令行&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://letere-gzj.github.io/hugo-stack/p/hugo/custom-blog/1%E5%90%AF%E5%8A%A8cmd.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;(2)输入命令创建hugo网站文件&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;hugo new site xxxx&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://letere-gzj.github.io/hugo-stack/p/hugo/custom-blog/2newSite.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;(3)切换目录，并把hugo.exe复制到刚生成的文件夹中&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;cd xxxx&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://letere-gzj.github.io/hugo-stack/p/hugo/custom-blog/3cd.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;2配置hugo主题&#34;&gt;2.配置hugo主题&lt;/h4&gt;&#xA;&lt;p&gt;（1）到【&lt;a href=&#34;https://themes.gohugo.io/&#34; title=&#34;theme&#34;&gt;Hugo Themes&lt;/a&gt;】，挑选下载主题&lt;/p&gt;&#xA;&lt;p&gt;（2）将下载好的主题解压，主题目录放到/themes文件夹中&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../../static/image/46444.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;（3）删除主文件夹中的hugo.toml和content文件夹&lt;/p&gt;&#xA;&lt;p&gt;(4)将exampleSite样例数据中的 Content文件夹 和 hugo.yaml（或config.yaml） 复制到主文件夹中&lt;/p&gt;&#xA;&lt;p&gt;（5）修改 hugo.yaml（或config.yaml） 中的 theme，将他修改为跟主题文件夹同名&lt;/p&gt;&#xA;&lt;p&gt;（6）启动服务，在本机试访问&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;hugo server -D    &#xA;http://localhost:1313&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;（7）修改主题配置&lt;/p&gt;&#xA;&lt;p&gt;hugo.yaml（或config.yaml）和主题文件夹下的layouts文件夹等&lt;/p&gt;&#xA;&lt;h3 id=&#34;三github部署&#34;&gt;三、Github部署&lt;/h3&gt;&#xA;&lt;h4 id=&#34;1常规部署&#34;&gt;1.常规部署&lt;/h4&gt;&#xA;&lt;p&gt;（1）前往【&lt;a href=&#34;https://github.com/&#34;&gt;Github官网&lt;/a&gt;】，创建仓库 {github用户名}.github.io&lt;/p&gt;&#xA;&lt;p&gt;（2）在仓库的Setting -&amp;gt; Pages Deploy from branch,Branch选择main-&amp;gt; save&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ubuntu22.04中KVM安装Openwrt虚拟机及管理</title>
      <link>https://zpcjl.github.io/posts/ubuntu22.04%E4%B8%ADkvm%E5%AE%89%E8%A3%85openwrt%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%8F%8A%E7%AE%A1%E7%90%86/</link>
      <pubDate>Tue, 26 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://zpcjl.github.io/posts/ubuntu22.04%E4%B8%ADkvm%E5%AE%89%E8%A3%85openwrt%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%8F%8A%E7%AE%A1%E7%90%86/</guid>
      <description>&lt;p&gt;kvm(kernel-based virtual machines)是一个基于linux内核的虚拟化技术, 可以直接将linux内核转换为hypervisor（系统管理程序）从而使得linux内核能够直接管理虚拟机, 直接调用linux内核中的内存管理、进程管理子系统来管理虚拟机。在ubuntu中安装openwrt可以作为旁路由方便管理。&lt;/p&gt;&#xA;&lt;h3 id=&#34;一安装kvm和openwrt虚拟机&#34;&gt;一、安装KVM和Openwrt虚拟机 &lt;/h3&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;本文操作都是在root账户下进行。&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;1.验证支持KVM&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;(1)验证CPU是否支持硬件虚拟化&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;grep -Eoc &#39;(vmx|svm)&#39; /proc/cpuinfo //数字大于0，则代表CPU支持硬件虚拟化，反之则不支持&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;(2)检查 VT 是否在 BIOS 中启用&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;apt install cpu-checker //检查 VT 是否在 BIOS 中启用&#xA;&#xA;kvm-ok //如果处理器虚拟化能力没有在 BIOS 中被禁用，命令将会打印出,否则，这个命令将会打印一个失败信息，和打印的消息&#xA;INFO: /dev/kvm exists&#xA;KVM acceleration can be used&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;&lt;strong&gt;2.安装KVM&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;apt install -y qemu-kvm libvirt-daemon-system libvirt-clients bridge-utils virtinst virt-manager&#xA;systemctl is-active libvirtd&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;(1)检查是否安装成功&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; lsmod | grep kvm&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;(2)启动虚拟化和设置开机自启&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;systemctl start libvirtd &#xA;systemctl enable libvirtd&#xA;systemctl list-unit-files |grep libvirtd.service //打印启动虚拟化和设置开机自启情况&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;&lt;strong&gt;3．网络环境配置&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ubuntu22.04中typecho安装和配置</title>
      <link>https://zpcjl.github.io/posts/ubuntu22.04%E4%B8%ADtypecho%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Tue, 26 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://zpcjl.github.io/posts/ubuntu22.04%E4%B8%ADtypecho%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://typecho.org/&#34;&gt;Typecho&lt;/a&gt;是一个轻量级的开源博客系统，具有简单、易用的特点。本文是在&lt;a href=&#34;https://www.oracle.com/&#34;&gt;Oracle&lt;/a&gt;实例 Ubuntu-22.04-Minimal 系统上安装 Typecho 博客系统的基本步骤。包括Nginx、PHP、Mysql、Typecho的安装和配置。此方法按照实际情况请参考使用！&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;一开放实例防火墙&#34;&gt;一、开放实例防火墙&lt;/h3&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;&lt;strong&gt;root下（下同）输入命令：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;iptables -P INPUT ACCEPT&#xA;iptables -P FORWARD ACCEPT&#xA;iptables -P OUTPUT ACCEPT&#xA;iptables -F&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;&lt;em&gt;80,443端口自行在安全列表中开放。&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;二安装nginxvimunzip&#34;&gt;二、安装nginx、vim、unzip&lt;/h3&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;&lt;strong&gt;输入命令：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;apt install nginx vim unzip -y&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;在浏览器http://IP 可以出现Welcome to nginx!&lt;/p&gt;&#xA;&lt;h3 id=&#34;三安装php及相关扩展&#34;&gt;三、安装PHP及相关扩展&lt;/h3&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;输入命令：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;apt install php-fpm php-mysql php-curl php-gd php-mbstring php-xml -y&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h3 id=&#34;四修改nginx配置文件测试php&#34;&gt;四、修改Nginx配置文件，测试PHP&lt;/h3&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;1.修改配置&lt;/p&gt;&#xA;&lt;p&gt;进入nginx的配置文件夹：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;cd /etc/nginx/sites-available/&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;先备份然后再修改：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;cp default default.back&#xA;vim default&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;修改Nginx配置文件为（删掉原来的文件复制粘贴即可）：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;server {&#xA;    listen 80;&#xA;    listen 443 ssl http2;&#xA;    listen [::]:443 ssl http2;&#xA;    server_name iblogs.me; # 填入域名&#xA;    &#xA;    ssl_certificate /etc/ssl/cert.pem;# 填入SSL证书路径&#xA;    ssl_certificate_key /etc/ssl/key.pem;# 填入SSL证书路径&#xA;    &#xA;    root /var/www/html; &#xA;&#xA;    index index.php index.html index.htm;&#xA;&#xA;    location / {&#xA;        try_files $uri $uri/ /index.php?$args;&#xA;    }&#xA;&#xA;    location ~ \.php$ {&#xA;        include snippets/fastcgi-php.conf;&#xA;        fastcgi_pass unix:/run/php/php8.1-fpm.sock; # 注意版本号8.1，与安装的php版本号对应&#xA;        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;&#xA;        include fastcgi_params;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;验证文件的正确性：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ubuntu22.04安装Plex,并开启硬件解码</title>
      <link>https://zpcjl.github.io/posts/ubuntu22.04%E5%AE%89%E8%A3%85plex%E5%B9%B6%E5%BC%80%E5%90%AF%E7%A1%AC%E4%BB%B6%E8%A7%A3%E7%A0%81/</link>
      <pubDate>Tue, 26 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://zpcjl.github.io/posts/ubuntu22.04%E5%AE%89%E8%A3%85plex%E5%B9%B6%E5%BC%80%E5%90%AF%E7%A1%AC%E4%BB%B6%E8%A7%A3%E7%A0%81/</guid>
      <description>&lt;p&gt;    Plex是一个媒体播放器和媒体服务器的组合，它可以让你把所有的媒体文件都放在一个地方，然后在任何设备上都可以轻松地访问和播放。你只需要在一台电脑或NAS上安装Plex Media Server，然后把你的媒体文件添加到它的数据库中，就可以通过网络把它们提供给其他设备。&lt;/p&gt;&#xA;&lt;p&gt;   本文是在N5095小主机中的Ubuntu22.04安装Plex，Ubuntu22.04默认的内核版本为5.15，而这个版本内含一个bug，导致11代IntelCPU无法正常开启硬件解码。&lt;/p&gt;&#xA;&lt;h3 id=&#34;一下载安装plex-media-server&#34;&gt;一、下载安装Plex Media Server&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;1.进入Plex网站下载：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.plex.tv/zh/&#34;&gt;https://www.plex.tv/zh/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;鼠标移动到下载，点击&lt;em&gt;&lt;strong&gt;Plex Media Server&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdnjson.com/images/2024/01/31/1b2be73b8b0487867.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;依次选择Linux-选择分布Ubuntu(16.04+)/Debian(8+)64-bit&#xA;&lt;img src=&#34;https://cdnjson.com/images/2024/01/31/208beaddd60d221a5.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;2.用Winscp将下载的plexmediaserver_xxx.deb文件上传到Ubuntu /opt/目录下&lt;/strong&gt;&#xA;进入目录安装：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;cd /opt&#xA;dpkg -i plexmediaserver_xxx.deb&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;启动、停止、开机启动命令：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;systemctl start plexmediaserver&#xA;systemctl stop plexmediaserver&#xA;systemctl enable plexmediaserver&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;**3.浏览器输入http://ip:32400即可进入服务器配置&#xA;**&lt;/p&gt;&#xA;&lt;h3 id=&#34;二ubuntu开启硬解&#34;&gt;二、Ubuntu开启硬解&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;1.升级内核版本&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;使用 dpkg 手动方式升级 Linux 内核&lt;/p&gt;&#xA;&lt;p&gt;从 &lt;a href=&#34;https://kernel.ubuntu.com/mainline/&#34;&gt;kernel.ubuntu.com&lt;/a&gt; 网站手动下载5.18以上 Linux 内核&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdnjson.com/images/2024/01/31/18bbcbc35949db7ac.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;点击你所选择的 Linux 内核版本链接，找到你对应的架构（“Build for XXX”）的那部分。然后下载符合以下格式的两个文件（其中 X.Y.Z 是最高版本号）：&lt;/p&gt;&#xA;&lt;p&gt;1.linux-image-X.Y.Z-generic-*.deb&lt;/p&gt;&#xA;&lt;p&gt;2.linux-modules-X.Y.Z-generic-.deb&lt;/p&gt;&#xA;&lt;p&gt;在终端中改变到文件所在的目录，然后root用户执行命令手动安装内核：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;dpkg --install *.deb&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;重启系统，使用新内核：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;reboot&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;检查是否如你所愿：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;uname -r&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;&lt;strong&gt;2.Intel显卡驱动配置&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>原版Openwrt编译和添加passwall、openclash插件</title>
      <link>https://zpcjl.github.io/posts/%E5%8E%9F%E7%89%88openwrt%E7%BC%96%E8%AF%91%E5%92%8C%E6%B7%BB%E5%8A%A0password%E6%8F%92%E4%BB%B6/</link>
      <pubDate>Tue, 26 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://zpcjl.github.io/posts/%E5%8E%9F%E7%89%88openwrt%E7%BC%96%E8%AF%91%E5%92%8C%E6%B7%BB%E5%8A%A0password%E6%8F%92%E4%BB%B6/</guid>
      <description></description>
    </item>
  </channel>
</rss>
